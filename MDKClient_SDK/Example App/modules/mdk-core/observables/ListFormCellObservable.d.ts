import { BaseCollectionFormCellObservable, ICollectionSpecifier } from './BaseCollectionFormCellObservable';
import { IFormCellTargetProxy } from '../context/IClientAPI';
export declare class ListFormCellObservable extends BaseCollectionFormCellObservable {
    protected readonly _DISPLAYED_ITEMS_KEY = "PickerItems";
    private _dataService;
    private _dataLoader;
    private _searchString;
    private _inSearching;
    private _ruleAlteredSearchObject;
    private _oldValue;
    private _uniqueId;
    private _defaultValueIfOneItemSelected;
    private _pendingSearchString;
    private readonly searchingIsActive;
    readonly searchString: string;
    cellValueChange(newValue: Map<String, any>): Promise<any>;
    loadMoreItems(onListPickerPress?: boolean): void;
    searchUpdated(searchText: string): Promise<void>;
    webCreateListPickerDialog(model: any): void;
    androidCreateListPickerFragmentPage(model: any): void;
    androidCloseListPickerFragmentPage(): void;
    androidGetModalFrameTag(): string;
    androidUpdateActionViewExpandedStatus(isActive: boolean): void;
    androidRefreshForSelections(newValue: Map<String, any>): Promise<any>;
    setValue(value: any, notify: boolean, isTextValue?: boolean): Promise<any>;
    setSearchEnabled(isSearchEnabled: boolean): void;
    setBarcodeScanEnabled(isBarcodeScanEnabled: boolean): void;
    buildSpecifier(proxySpecifier: IFormCellTargetProxy): ICollectionSpecifier;
    setTargetSpecifier(specifier: IFormCellTargetProxy): Promise<any>;
    triggerOnValueChangeEventForOneItemSelected(): Promise<any>;
    setFilterCaption(caption: string): void;
    updateSelectedValues(values: any): Promise<any>;
    protected _resolveCollection(specifier?: ICollectionSpecifier, loadData?: boolean): Promise<any>;
    private _buildCollection;
    private _filterListPickerItemsDataByCount;
    protected _setResolvedItem(allowDefaultValueIfOneItem?: boolean): void;
    protected _bindObjectValuesForCollection(value: any, firstRow: boolean): any[];
    protected _bindObjectValuesForSpecifierCollection(value: any): Promise<any>[];
    protected _bindItemValue(bindingObject: any, bindingProperty: string, bindingValue: any): Promise<any>;
    protected _resolveObjectCell(objectCellDef: any, ctx: any): Promise<any>;
    protected _getResolvedObjectCell(objectCellDef: any, ctx: any): Promise<{}>;
    protected _assignItems(): Promise<any>;
    protected _assignSelections(index?: number): Promise<any>;
    protected _buildSelectionObject(returnValues: any[], selection: any): Promise<any>;
    protected _reset(resetTarget: boolean): void;
    private _buildUniqueIdObject;
    private dataService;
    private _getItemWithUniqueId;
    private _isValidUniqueIdObject;
    private _getValidSearchProperty;
    private _newServiceWithSearchQueryOptions;
    private _newServiceWithUidQueryOptions;
}
