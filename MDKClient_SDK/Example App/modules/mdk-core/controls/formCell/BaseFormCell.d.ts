import { MDKFormCellModel } from 'mdk-sap';
import { FormCellDataBuilder } from '../../builders/ui/formcell/FormCellDataBuilder';
import { BaseFormCellObservable } from '../../observables/BaseFormCellObservable';
import { BaseControl } from '../BaseControl';
import { BaseSection } from '../../sections/BaseSection';
export declare class BaseFormCell extends BaseControl {
    protected _builder: FormCellDataBuilder;
    protected _model: MDKFormCellModel;
    protected _parentSection: BaseSection;
    private _validationProperties;
    readonly builder: FormCellDataBuilder;
    readonly isBindable: boolean;
    readonly isFormCell: boolean;
    readonly searchString: string;
    readonly model: MDKFormCellModel;
    parentSection: BaseSection;
    visible: boolean;
    createFormCellModel(builtData: any): Promise<MDKFormCellModel>;
    getTargetSpecifier(): any;
    build(): Promise<any>;
    bind(): Promise<any>;
    redraw(): Promise<any>;
    redrawFromParent(): Promise<any>;
    updateCell(): void;
    updateCellByProperties(data: any): void;
    updateFormCellModel(redraw?: boolean): Promise<any>;
    setEditable(isEditable: boolean): void;
    setStyle(style?: string, target?: string): any;
    setValidationProperty(key: string, value: any): void;
    clearValidation(): void;
    clearValidationOnValueChange(): void;
    setTargetSpecifier(specifier: any, redraw?: boolean): Promise<any>;
    setValue(value: any, notify: boolean, isTextValue?: boolean): Promise<any>;
    setVisible(isVisible: boolean, redraw?: boolean): void;
    onLoaded(): Promise<any>;
    setFocus(keyboardVisibility: string): void;
    hideLazyLoadingIndicator(): void;
    protected createObservable(): BaseFormCellObservable;
    private setupValidationProperties;
    private isHexColor;
}
