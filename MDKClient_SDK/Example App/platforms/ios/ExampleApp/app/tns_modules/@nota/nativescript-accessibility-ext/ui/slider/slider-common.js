"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var profiling_1 = require("@nativescript/core/profiling");
var slider_1 = require("@nativescript/core/ui/slider");
exports.Slider = slider_1.Slider;
var helpers_1 = require("../../utils/helpers");
slider_1.Slider.accessibilityDecrementEvent = 'accessibilityDecrement';
slider_1.Slider.accessibilityIncrementEvent = 'accessibilityIncrement';
var accessibilityStepsPropertyName = 'accessibilityStep';
var accessibilityStepsCssName = 'a11y-steps';
exports.accessibilityStepsCssProperty = helpers_1.addCssPropertyToView(slider_1.Slider, accessibilityStepsPropertyName, accessibilityStepsCssName, false, 10, parseInt);
helpers_1.setViewFunction(slider_1.Slider, '_handlerAccessibilityIncrementEvent', profiling_1.profile('Slider<A11Y>.handlerAccessibilityIncrementEvent', function _handlerAccessibilityIncrementEvent() {
    var args = {
        object: this,
        eventName: slider_1.Slider.accessibilityIncrementEvent,
        value: this.value + (this.accessibilityStep || 10),
    };
    this.notify(args);
    return args.value;
}));
helpers_1.setViewFunction(slider_1.Slider, '_handlerAccessibilityDecrementEvent', profiling_1.profile('Slider<A11Y>._handlerAccessibilityDecrementEvent', function _handlerAccessibilityDecrementEvent() {
    var args = {
        object: this,
        eventName: slider_1.Slider.accessibilityIncrementEvent,
        value: this.value - (this.accessibilityStep || 10),
    };
    this.notify(args);
    return args.value;
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLWNvbW1vbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNsaWRlci1jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSwwREFBdUQ7QUFDdkQsdURBQXdIO0FBMkMvRyxpQkEzQ2tFLGVBQU0sQ0EyQ2xFO0FBMUNmLCtDQUE0RTtBQUU1RSxlQUFNLENBQUMsMkJBQTJCLEdBQUcsd0JBQXdCLENBQUM7QUFDOUQsZUFBTSxDQUFDLDJCQUEyQixHQUFHLHdCQUF3QixDQUFDO0FBRTlELElBQU0sOEJBQThCLEdBQUcsbUJBQW1CLENBQUM7QUFDM0QsSUFBTSx5QkFBeUIsR0FBRyxZQUFZLENBQUM7QUFFbEMsUUFBQSw2QkFBNkIsR0FBRyw4QkFBb0IsQ0FBQyxlQUFNLEVBQUUsOEJBQThCLEVBQUUseUJBQXlCLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUUxSix5QkFBZSxDQUNiLGVBQU0sRUFDTixxQ0FBcUMsRUFDckMsbUJBQU8sQ0FBQyxpREFBaUQsRUFBRSxTQUFTLG1DQUFtQztJQUNyRyxJQUFNLElBQUksR0FBb0M7UUFDNUMsTUFBTSxFQUFFLElBQUk7UUFDWixTQUFTLEVBQUUsZUFBTSxDQUFDLDJCQUEyQjtRQUM3QyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxFQUFFLENBQUM7S0FDbkQsQ0FBQztJQUVGLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFbEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0FBQ3BCLENBQUMsQ0FBQyxDQUNILENBQUM7QUFFRix5QkFBZSxDQUNiLGVBQU0sRUFDTixxQ0FBcUMsRUFDckMsbUJBQU8sQ0FBQyxrREFBa0QsRUFBRSxTQUFTLG1DQUFtQztJQUN0RyxJQUFNLElBQUksR0FBb0M7UUFDNUMsTUFBTSxFQUFFLElBQUk7UUFDWixTQUFTLEVBQUUsZUFBTSxDQUFDLDJCQUEyQjtRQUM3QyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxFQUFFLENBQUM7S0FDbkQsQ0FBQztJQUVGLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFbEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0FBQ3BCLENBQUMsQ0FBQyxDQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9zbGlkZXIuZC50c1wiIC8+XG5cbmltcG9ydCB7IHByb2ZpbGUgfSBmcm9tICdAbmF0aXZlc2NyaXB0L2NvcmUvcHJvZmlsaW5nJztcbmltcG9ydCB7IEFjY2Vzc2liaWxpdHlEZWNyZW1lbnRFdmVudERhdGEsIEFjY2Vzc2liaWxpdHlJbmNyZW1lbnRFdmVudERhdGEsIFNsaWRlciB9IGZyb20gJ0BuYXRpdmVzY3JpcHQvY29yZS91aS9zbGlkZXInO1xuaW1wb3J0IHsgYWRkQ3NzUHJvcGVydHlUb1ZpZXcsIHNldFZpZXdGdW5jdGlvbiB9IGZyb20gJy4uLy4uL3V0aWxzL2hlbHBlcnMnO1xuXG5TbGlkZXIuYWNjZXNzaWJpbGl0eURlY3JlbWVudEV2ZW50ID0gJ2FjY2Vzc2liaWxpdHlEZWNyZW1lbnQnO1xuU2xpZGVyLmFjY2Vzc2liaWxpdHlJbmNyZW1lbnRFdmVudCA9ICdhY2Nlc3NpYmlsaXR5SW5jcmVtZW50JztcblxuY29uc3QgYWNjZXNzaWJpbGl0eVN0ZXBzUHJvcGVydHlOYW1lID0gJ2FjY2Vzc2liaWxpdHlTdGVwJztcbmNvbnN0IGFjY2Vzc2liaWxpdHlTdGVwc0Nzc05hbWUgPSAnYTExeS1zdGVwcyc7XG5cbmV4cG9ydCBjb25zdCBhY2Nlc3NpYmlsaXR5U3RlcHNDc3NQcm9wZXJ0eSA9IGFkZENzc1Byb3BlcnR5VG9WaWV3KFNsaWRlciwgYWNjZXNzaWJpbGl0eVN0ZXBzUHJvcGVydHlOYW1lLCBhY2Nlc3NpYmlsaXR5U3RlcHNDc3NOYW1lLCBmYWxzZSwgMTAsIHBhcnNlSW50KTtcblxuc2V0Vmlld0Z1bmN0aW9uKFxuICBTbGlkZXIsXG4gICdfaGFuZGxlckFjY2Vzc2liaWxpdHlJbmNyZW1lbnRFdmVudCcsXG4gIHByb2ZpbGUoJ1NsaWRlcjxBMTFZPi5oYW5kbGVyQWNjZXNzaWJpbGl0eUluY3JlbWVudEV2ZW50JywgZnVuY3Rpb24gX2hhbmRsZXJBY2Nlc3NpYmlsaXR5SW5jcmVtZW50RXZlbnQodGhpczogU2xpZGVyKSB7XG4gICAgY29uc3QgYXJnczogQWNjZXNzaWJpbGl0eUluY3JlbWVudEV2ZW50RGF0YSA9IHtcbiAgICAgIG9iamVjdDogdGhpcyxcbiAgICAgIGV2ZW50TmFtZTogU2xpZGVyLmFjY2Vzc2liaWxpdHlJbmNyZW1lbnRFdmVudCxcbiAgICAgIHZhbHVlOiB0aGlzLnZhbHVlICsgKHRoaXMuYWNjZXNzaWJpbGl0eVN0ZXAgfHwgMTApLFxuICAgIH07XG5cbiAgICB0aGlzLm5vdGlmeShhcmdzKTtcblxuICAgIHJldHVybiBhcmdzLnZhbHVlO1xuICB9KSxcbik7XG5cbnNldFZpZXdGdW5jdGlvbihcbiAgU2xpZGVyLFxuICAnX2hhbmRsZXJBY2Nlc3NpYmlsaXR5RGVjcmVtZW50RXZlbnQnLFxuICBwcm9maWxlKCdTbGlkZXI8QTExWT4uX2hhbmRsZXJBY2Nlc3NpYmlsaXR5RGVjcmVtZW50RXZlbnQnLCBmdW5jdGlvbiBfaGFuZGxlckFjY2Vzc2liaWxpdHlEZWNyZW1lbnRFdmVudCh0aGlzOiBTbGlkZXIpIHtcbiAgICBjb25zdCBhcmdzOiBBY2Nlc3NpYmlsaXR5RGVjcmVtZW50RXZlbnREYXRhID0ge1xuICAgICAgb2JqZWN0OiB0aGlzLFxuICAgICAgZXZlbnROYW1lOiBTbGlkZXIuYWNjZXNzaWJpbGl0eUluY3JlbWVudEV2ZW50LFxuICAgICAgdmFsdWU6IHRoaXMudmFsdWUgLSAodGhpcy5hY2Nlc3NpYmlsaXR5U3RlcCB8fCAxMCksXG4gICAgfTtcblxuICAgIHRoaXMubm90aWZ5KGFyZ3MpO1xuXG4gICAgcmV0dXJuIGFyZ3MudmFsdWU7XG4gIH0pLFxuKTtcblxuZXhwb3J0IHsgU2xpZGVyIH07XG4iXX0=