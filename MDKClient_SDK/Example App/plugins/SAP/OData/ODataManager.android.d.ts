export declare class OData {
    private dataProviders;
    private offlineDataProviders;
    private onChangeset;
    private profilingEnabled;
    createService(params: any): Promise<any>;
    openService(params: any): Promise<any>;
    downloadMedia(params: any): Promise<any>;
    isMediaLocal(params: any): Promise<any>;
    downloadOfflineOData(params: any): Promise<any>;
    initializeOfflineStore(params: any): Promise<any>;
    getPreviousUser(): string;
    closeOfflineStore(params: any): Promise<any>;
    clearOfflineStore(params: any): Promise<any>;
    uploadOfflineOData(params: any): Promise<any>;
    cancelUploadOfflineOData(params: any): Promise<any>;
    cancelDownloadOfflineOData(params: any): Promise<any>;
    read(params: any): Promise<any>;
    update(params: any): Promise<any>;
    create(params: any): Promise<any>;
    createRelated(params: any): Promise<any>;
    delete(params: any): Promise<any>;
    createMedia(params: any): Promise<any>;
    createRelatedMedia(params: any): Promise<any>;
    beginChangeSet(params: any): Promise<any>;
    cancelChangeSet(params: any): Promise<any>;
    commitChangeSet(params: any): Promise<any>;
    isOnChangeSet(): boolean;
    deleteMedia(params: any): Promise<any>;
    downloadStream(params: any): Promise<any>;
    uploadStream(params: any): Promise<any>;
    count(params: any): Promise<number>;
    callFunction(params: any): Promise<any>;
    undoPendingChanges(params: any): Promise<any>;
    base64StringToBinary(params: any): Promise<any>;
    getPropertyType(params: any): string;
    getVersion(params: any): number;
    getOfflineStoreStatus(params: any): string;
    getOfflineParameter(params: any): any;
    setOfflineParameter(params: any): void;
    private getDataProvider;
    private getProvider;
    private writeProfilingLog;
}
