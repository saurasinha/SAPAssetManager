import { ODataAction } from '../../actions/ODataAction';
import { IDataEventListener } from '../../data/DataEventHandler';
import { BaseSection } from '../../sections/BaseSection';
import { ObservableArray } from 'tns-core-modules/data/observable-array';
import { ITargetServiceSpecifier } from '../../data/ITargetSpecifier';
import { EventHandler } from '../../EventHandler';
import { ExecuteSource } from '../../common/ExecuteSource';
export declare class BaseSectionObservable implements IDataEventListener {
    protected static _minimumInteritemSpacing: string;
    protected static _numberOfColumns: string;
    protected static _minimumLineSpacing: string;
    protected static _imageHeight: string;
    protected static _imageWidth: string;
    protected static _layoutType: string;
    protected static _stylesKey: string;
    protected static readonly _onPressDefinitionCellKey = "OnPress";
    protected static readonly _disableSelectionStyleItemKey = "disableSelectionStyle";
    protected _sectionParameters: Object;
    protected _staticCells: boolean;
    protected _visibleRows: Array<number>;
    protected _visibleKey: string;
    protected _maxItemCountParamKey: string;
    protected _dynamicVisible: boolean;
    protected _targetSpecifier: any;
    private _binding;
    private _section;
    private _staticSection;
    private _emptySectionCaptionParamKey;
    private _emptySectionStyleParamKey;
    private _footerAccessoryTypeParamKey;
    private _footerAttributeLabelParamKey;
    private _footerStyleKey;
    private _footerTitleParamKey;
    private _usesFooterParamKey;
    private _usesHeaderParamKey;
    private _headerTitleParamKey;
    private _useHeaderTopPaddingKey;
    private _useFooterBottomPaddingKey;
    private _emptySectionHidesFooterParamKey;
    private _emptySectionFooterVisibleParamKey;
    private _footerVisibleParamKey;
    private _contextMenuKey;
    private _selectedRowsKey;
    private _dataSubscriptions;
    private _sectionDataSubscriptions;
    private _typeKey;
    private _redrawIsRunning;
    constructor(section: BaseSection);
    visible: boolean;
    dynamicVisible: boolean;
    sectionDataSubscriptions: string[];
    getTargetSpecifier(): any;
    setTargetSpecifier(targetSpecifier: any, redraw: boolean): Promise<any>;
    getRuntimeSpecifier(targetSpecifierDefinition: any): any;
    unregisterDataListeners(): void;
    redraw(): Promise<any>;
    reloadRow(index: number): void;
    onDataChanged(action: ODataAction, result: any): Promise<any>;
    readonly isPageVisible: boolean;
    onPageUnloaded(pageExists: boolean): void;
    bind(): Promise<any>;
    binding: any;
    readonly debugString: string;
    readonly value: any;
    protected isSectionEmpty(): boolean;
    protected _performRedraw(): Promise<any>;
    protected _maxItemCount: number;
    protected footerAttributeLabel: string;
    protected footerStyle: string;
    protected _bindValue(bindingObject: any, bindingProperty: string, bindingValue: any, style?: string): Promise<any>;
    protected _bindStyles(cell: any, bindingObject: any): Promise<any>;
    protected _bindStylesValue(styles: any, bindingObject: any): Promise<any>;
    readonly sectionParameters: Object;
    readonly staticSection: boolean;
    protected readonly section: BaseSection;
    protected _bindValues(bindingObject: any, definition: any): Promise<any>;
    protected _getValidBindObject(binding: any): any;
    protected _setDisableSelectionStyle(cell: any, item: any): void;
    protected _filterCells(items: Array<Object>): Array<Object>;
    protected _filterVisibleCells(items: Array<any>): Array<any>;
    protected clearVisibleRowMapping(): void;
    protected adjustForHiddenRows(row: any): any;
    protected buildBaseSectionEventHandler(): EventHandler;
    protected getExecuteSource(): ExecuteSource;
    private _isValidBinding;
    private _unregisterDataListeners;
    private _registerDataListeners;
    private _resolveFooterParams;
    private _isFooterShown;
    private userFooter;
    protected _readFromService(service: ITargetServiceSpecifier): Promise<ObservableArray<any>>;
    resetDataChangedFlag(): void;
}
