import { BaseControl } from './BaseControl';
import { ToolbarItemObservable } from '../observables/ToolbarItemObservable';
import { ToolBarItem } from 'toolbar-plugin';
import { ToolbarItemDefinition } from '../definitions/controls/ToolbarItemDefinition';
import { Visibility } from 'tns-core-modules/ui/styling/style-properties';
import { IControlData } from './IControlData';
export declare class ToolbarItem extends BaseControl {
    static getItemStyle(selector: any, cssClassName: any): Object;
    private static counter;
    private toolbarItemView;
    private _name;
    private _clickable;
    private _toolbarLabelStyle;
    private _toolbarItemStyle;
    private _toolbarItemPressedStyle;
    private _itemLabelStyle;
    private _itemStyle;
    private _itemPressedStyle;
    constructor();
    readonly isBindable: boolean;
    initialize(controlData: IControlData): void;
    view(): ToolBarItem;
    readonly clickable: boolean;
    readonly name: string;
    readonly enabled: boolean;
    readonly caption: string;
    readonly visibility: Visibility;
    readonly width: number;
    readonly systemItem: string;
    readonly itemType: string;
    setCaption(caption: string): Promise<any>;
    setEnabled(enabled: boolean): Promise<any>;
    setStyle(cssClassName?: string): void;
    setImage(img: string): void;
    setVisibility(visibility: Visibility): void;
    setWidth(width: number): void;
    setSystemItem(systemItem: string): void;
    setItemType(itemType: string): void;
    createToolBarItem(def: ToolbarItemDefinition): Promise<any>;
    redraw(): Promise<any>;
    protected createObservable(): ToolbarItemObservable;
}
